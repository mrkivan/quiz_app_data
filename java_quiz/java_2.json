{
  "total": 30,
  "items": [
    {
      "questionId": 1,
      "question": "What is the default access modifier in Java if none is specified for a class member?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "If no access modifier is specified, class members have 'default' (package-private) access, meaning they are accessible only within the same package.",
      "answerCellList": [
        {
          "answerId": 1,
          "questionId": 1,
          "data": "A. public",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 2,
          "questionId": 1,
          "data": "B. private",
          "isItAnswer": false,
          "position": 2
        },
        {
          "answerId": 3,
          "questionId": 1,
          "data": "C. protected",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 4,
          "questionId": 1,
          "data": "D. default",
          "isItAnswer": true,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 1,
        "answerId": [4],
        "answer": ["D. default"],
        "explanation": "If no access modifier is specified, class members have 'default' (package-private) access, meaning they are accessible only within the same package."
      }
    },
    {
      "questionId": 2,
      "question": "Which access modifier allows a member to be accessible only within its own class?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "The 'private' access modifier restricts access to members only within the same class.",
      "answerCellList": [
        {
          "answerId": 5,
          "questionId": 2,
          "data": "A. public",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 6,
          "questionId": 2,
          "data": "B. private",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 7,
          "questionId": 2,
          "data": "C. protected",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 8,
          "questionId": 2,
          "data": "D. default",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 2,
        "answerId": [6],
        "answer": ["B. private"],
        "explanation": "The 'private' access modifier restricts access to members only within the same class."
      }
    },
    {
      "questionId": 3,
      "question": "Which access modifier makes a member accessible everywhere in a Java program?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "The 'public' access modifier allows a member to be accessible from anywhere in the program.",
      "answerCellList": [
        {
          "answerId": 9,
          "questionId": 3,
          "data": "A. public",
          "isItAnswer": true,
          "position": 1
        },
        {
          "answerId": 10,
          "questionId": 3,
          "data": "B. private",
          "isItAnswer": false,
          "position": 2
        },
        {
          "answerId": 11,
          "questionId": 3,
          "data": "C. protected",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 12,
          "questionId": 3,
          "data": "D. default",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 3,
        "answerId": [9],
        "answer": ["A. public"],
        "explanation": "The 'public' access modifier allows a member to be accessible from anywhere in the program."
      }
    },
    {
      "questionId": 4,
      "question": "Which access modifier allows access within the same package and also in subclasses, even in different packages?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "The 'protected' access modifier allows access within the same package and in subclasses, regardless of the package.",
      "answerCellList": [
        {
          "answerId": 13,
          "questionId": 4,
          "data": "A. public",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 14,
          "questionId": 4,
          "data": "B. private",
          "isItAnswer": false,
          "position": 2
        },
        {
          "answerId": 15,
          "questionId": 4,
          "data": "C. protected",
          "isItAnswer": true,
          "position": 3
        },
        {
          "answerId": 16,
          "questionId": 4,
          "data": "D. default",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 4,
        "answerId": [15],
        "answer": ["C. protected"],
        "explanation": "The 'protected' access modifier allows access within the same package and in subclasses, regardless of the package."
      }
    },
    {
      "questionId": 5,
      "question": "What is the scope of a method with the 'default' access modifier in Java?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "A method with the 'default' (package-private) access modifier is accessible only within the same package.",
      "answerCellList": [
        {
          "answerId": 17,
          "questionId": 5,
          "data": "A. Everywhere",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 18,
          "questionId": 5,
          "data": "B. Same package",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 19,
          "questionId": 5,
          "data": "C. Same class",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 20,
          "questionId": 5,
          "data": "D. Subclasses only",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 5,
        "answerId": [18],
        "answer": ["B. Same package"],
        "explanation": "A method with the 'default' (package-private) access modifier is accessible only within the same package."
      }
    },
    {
      "questionId": 6,
      "question": "Can a top-level class in Java be declared as 'private'?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Top-level classes cannot be 'private' as they must be accessible to be used; only nested or inner classes can be private.",
      "answerCellList": [
        {
          "answerId": 21,
          "questionId": 6,
          "data": "A. Yes",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 22,
          "questionId": 6,
          "data": "B. No",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 23,
          "questionId": 6,
          "data": "C. Only if nested",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 24,
          "questionId": 6,
          "data": "D. Only in interfaces",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 6,
        "answerId": [22],
        "answer": ["B. No"],
        "explanation": "Top-level classes cannot be 'private' as they must be accessible to be used; only nested or inner classes can be private."
      }
    },
    {
      "questionId": 7,
      "question": "Which access modifier is most restrictive in Java?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "The 'private' access modifier is the most restrictive, limiting access to within the same class only.",
      "answerCellList": [
        {
          "answerId": 25,
          "questionId": 7,
          "data": "A. public",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 26,
          "questionId": 7,
          "data": "B. private",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 27,
          "questionId": 7,
          "data": "C. protected",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 28,
          "questionId": 7,
          "data": "D. default",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 7,
        "answerId": [26],
        "answer": ["B. private"],
        "explanation": "The 'private' access modifier is the most restrictive, limiting access to within the same class only."
      }
    },
    {
      "questionId": 8,
      "question": "Can a constructor in Java be declared as 'private'?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Yes, a constructor can be 'private' to prevent instantiation from outside the class, often used in singleton patterns.",
      "answerCellList": [
        {
          "answerId": 29,
          "questionId": 8,
          "data": "A. Yes",
          "isItAnswer": true,
          "position": 1
        },
        {
          "answerId": 30,
          "questionId": 8,
          "data": "B. No",
          "isItAnswer": false,
          "position": 2
        },
        {
          "answerId": 31,
          "questionId": 8,
          "data": "C. Only if static",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 32,
          "questionId": 8,
          "data": "D. Only if public",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 8,
        "answerId": [29],
        "answer": ["A. Yes"],
        "explanation": "Yes, a constructor can be 'private' to prevent instantiation from outside the class, often used in singleton patterns."
      }
    },
    {
      "questionId": 9,
      "question": "Which access modifier allows a member to be accessed by subclasses in different packages?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "The 'protected' access modifier allows access by subclasses, even if they are in different packages, and within the same package.",
      "answerCellList": [
        {
          "answerId": 33,
          "questionId": 9,
          "data": "A. public",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 34,
          "questionId": 9,
          "data": "B. private",
          "isItAnswer": false,
          "position": 2
        },
        {
          "answerId": 35,
          "questionId": 9,
          "data": "C. protected",
          "isItAnswer": true,
          "position": 3
        },
        {
          "answerId": 36,
          "questionId": 9,
          "data": "D. default",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 9,
        "answerId": [35],
        "answer": ["C. protected"],
        "explanation": "The 'protected' access modifier allows access by subclasses, even if they are in different packages, and within the same package."
      }
    },
    {
      "questionId": 10,
      "question": "What happens if a method is declared 'public' in a class?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "A 'public' method can be accessed from any class or package in the program.",
      "answerCellList": [
        {
          "answerId": 37,
          "questionId": 10,
          "data": "A. Accessible only in the same class",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 38,
          "questionId": 10,
          "data": "B. Accessible everywhere",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 39,
          "questionId": 10,
          "data": "C. Accessible only in the same package",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 40,
          "questionId": 10,
          "data": "D. Accessible only in subclasses",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 10,
        "answerId": [38],
        "answer": ["B. Accessible everywhere"],
        "explanation": "A 'public' method can be accessed from any class or package in the program."
      }
    },
    {
      "questionId": 11,
      "question": "Can a field with 'private' access be accessed directly by a subclass?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "A 'private' field cannot be accessed directly by a subclass; access requires public or protected methods like getters/setters.",
      "answerCellList": [
        {
          "answerId": 41,
          "questionId": 11,
          "data": "A. Yes",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 42,
          "questionId": 11,
          "data": "B. No",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 43,
          "questionId": 11,
          "data": "C. Only if in the same package",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 44,
          "questionId": 11,
          "data": "D. Only if static",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 11,
        "answerId": [42],
        "answer": ["B. No"],
        "explanation": "A 'private' field cannot be accessed directly by a subclass; access requires public or protected methods like getters/setters."
      }
    },
    {
      "questionId": 12,
      "question": "Which access modifier is used to implement encapsulation in Java?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "The 'private' access modifier is used for encapsulation, hiding fields and providing access through public methods.",
      "answerCellList": [
        {
          "answerId": 45,
          "questionId": 12,
          "data": "A. public",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 46,
          "questionId": 12,
          "data": "B. private",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 47,
          "questionId": 12,
          "data": "C. protected",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 48,
          "questionId": 12,
          "data": "D. default",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 12,
        "answerId": [46],
        "answer": ["B. private"],
        "explanation": "The 'private' access modifier is used for encapsulation, hiding fields and providing access through public methods."
      }
    },
    {
      "questionId": 13,
      "question": "Can a top-level class in Java be declared as 'protected'?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Top-level classes cannot be 'protected'; only nested or inner classes can have this modifier.",
      "answerCellList": [
        {
          "answerId": 49,
          "questionId": 13,
          "data": "A. Yes",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 50,
          "questionId": 13,
          "data": "B. No",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 51,
          "questionId": 13,
          "data": "C. Only if abstract",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 52,
          "questionId": 13,
          "data": "D. Only if final",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 13,
        "answerId": [50],
        "answer": ["B. No"],
        "explanation": "Top-level classes cannot be 'protected'; only nested or inner classes can have this modifier."
      }
    },
    {
      "questionId": 14,
      "question": "What is the access level of a method declared with no access modifier in a class?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "A method with no access modifier has 'default' (package-private) access, accessible only within the same package.",
      "answerCellList": [
        {
          "answerId": 53,
          "questionId": 14,
          "data": "A. public",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 54,
          "questionId": 14,
          "data": "B. private",
          "isItAnswer": false,
          "position": 2
        },
        {
          "answerId": 55,
          "questionId": 14,
          "data": "C. protected",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 56,
          "questionId": 14,
          "data": "D. default",
          "isItAnswer": true,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 14,
        "answerId": [56],
        "answer": ["D. default"],
        "explanation": "A method with no access modifier has 'default' (package-private) access, accessible only within the same package."
      }
    },
    {
      "questionId": 15,
      "question": "Which access modifier allows a method to be overridden by subclasses in different packages?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "The 'protected' access modifier allows a method to be overridden by subclasses, even in different packages.",
      "answerCellList": [
        {
          "answerId": 57,
          "questionId": 15,
          "data": "A. private",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 58,
          "questionId": 15,
          "data": "B. default",
          "isItAnswer": false,
          "position": 2
        },
        {
          "answerId": 59,
          "questionId": 15,
          "data": "C. protected",
          "isItAnswer": true,
          "position": 3
        },
        {
          "answerId": 60,
          "questionId": 15,
          "data": "D. final",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 15,
        "answerId": [59],
        "answer": ["C. protected"],
        "explanation": "The 'protected' access modifier allows a method to be overridden by subclasses, even in different packages."
      }
    },
    {
      "questionId": 16,
      "question": "Can a 'public' method in a superclass be overridden by a 'private' method in a subclass?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "A 'public' method cannot be overridden by a 'private' method, as 'private' methods are not inherited.",
      "answerCellList": [
        {
          "answerId": 61,
          "questionId": 16,
          "data": "A. Yes",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 62,
          "questionId": 16,
          "data": "B. No",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 63,
          "questionId": 16,
          "data": "C. Only if static",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 64,
          "questionId": 16,
          "data": "D. Only if final",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 16,
        "answerId": [62],
        "answer": ["B. No"],
        "explanation": "A 'public' method cannot be overridden by a 'private' method, as 'private' methods are not inherited."
      }
    },
    {
      "questionId": 17,
      "question": "Which access modifier is typically used for constants in Java?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Constants are typically declared 'public' to allow access from anywhere, often combined with 'static' and 'final'.",
      "answerCellList": [
        {
          "answerId": 65,
          "questionId": 17,
          "data": "A. private",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 66,
          "questionId": 17,
          "data": "B. public",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 67,
          "questionId": 17,
          "data": "C. protected",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 68,
          "questionId": 17,
          "data": "D. default",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 17,
        "answerId": [66],
        "answer": ["B. public"],
        "explanation": "Constants are typically declared 'public' to allow access from anywhere, often combined with 'static' and 'final'."
      }
    },
    {
      "questionId": 18,
      "question": "What is the access level of a 'protected' field in a class?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "A 'protected' field is accessible within the same package and in subclasses, even in different packages.",
      "answerCellList": [
        {
          "answerId": 69,
          "questionId": 18,
          "data": "A. Same class only",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 70,
          "questionId": 18,
          "data": "B. Same package and subclasses",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 71,
          "questionId": 18,
          "data": "C. Everywhere",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 72,
          "questionId": 18,
          "data": "D. Same package only",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 18,
        "answerId": [70],
        "answer": ["B. Same package and subclasses"],
        "explanation": "A 'protected' field is accessible within the same package and in subclasses, even in different packages."
      }
    },
    {
      "questionId": 19,
      "question": "Can a 'private' method be overridden in a subclass?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "'Private' methods are not inherited, so they cannot be overridden in a subclass.",
      "answerCellList": [
        {
          "answerId": 73,
          "questionId": 19,
          "data": "A. Yes",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 74,
          "questionId": 19,
          "data": "B. No",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 75,
          "questionId": 19,
          "data": "C. Only if public",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 76,
          "questionId": 19,
          "data": "D. Only if protected",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 19,
        "answerId": [74],
        "answer": ["B. No"],
        "explanation": "'Private' methods are not inherited, so they cannot be overridden in a subclass."
      }
    },
    {
      "questionId": 20,
      "question": "Which access modifier is used for a method that should be accessible only within its package?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "The 'default' (package-private) access modifier restricts access to within the same package.",
      "answerCellList": [
        {
          "answerId": 77,
          "questionId": 20,
          "data": "A. public",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 78,
          "questionId": 20,
          "data": "B. private",
          "isItAnswer": false,
          "position": 2
        },
        {
          "answerId": 79,
          "questionId": 20,
          "data": "C. protected",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 80,
          "questionId": 20,
          "data": "D. default",
          "isItAnswer": true,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 20,
        "answerId": [80],
        "answer": ["D. default"],
        "explanation": "The 'default' (package-private) access modifier restricts access to within the same package."
      }
    },
    {
      "questionId": 21,
      "question": "Can a 'protected' method be accessed from a different package without inheritance?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "A 'protected' method cannot be accessed from a different package unless through a subclass.",
      "answerCellList": [
        {
          "answerId": 81,
          "questionId": 21,
          "data": "A. Yes",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 82,
          "questionId": 21,
          "data": "B. No",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 83,
          "questionId": 21,
          "data": "C. Only if public",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 84,
          "questionId": 21,
          "data": "D. Only if static",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 21,
        "answerId": [82],
        "answer": ["B. No"],
        "explanation": "A 'protected' method cannot be accessed from a different package unless through a subclass."
      }
    },
    {
      "questionId": 22,
      "question": "What is the purpose of access modifiers in Java?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Access modifiers control the visibility and accessibility of class members to enforce encapsulation and security.",
      "answerCellList": [
        {
          "answerId": 85,
          "questionId": 22,
          "data": "A. To define method return types",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 86,
          "questionId": 22,
          "data": "B. To control visibility",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 87,
          "questionId": 22,
          "data": "C. To declare variables",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 88,
          "questionId": 22,
          "data": "D. To initialize objects",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 22,
        "answerId": [86],
        "answer": ["B. To control visibility"],
        "explanation": "Access modifiers control the visibility and accessibility of class members to enforce encapsulation and security."
      }
    },
    {
      "questionId": 23,
      "question": "Can a 'public' class be accessed from any package?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "A 'public' class can be accessed from any package, provided it is imported or fully qualified.",
      "answerCellList": [
        {
          "answerId": 89,
          "questionId": 23,
          "data": "A. Yes",
          "isItAnswer": true,
          "position": 1
        },
        {
          "answerId": 90,
          "questionId": 23,
          "data": "B. No",
          "isItAnswer": false,
          "position": 2
        },
        {
          "answerId": 91,
          "questionId": 23,
          "data": "C. Only if final",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 92,
          "questionId": 23,
          "data": "D. Only if abstract",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 23,
        "answerId": [89],
        "answer": ["A. Yes"],
        "explanation": "A 'public' class can be accessed from any package, provided it is imported or fully qualified."
      }
    },
    {
      "questionId": 24,
      "question": "What happens if a class is declared with no access modifier?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "A class with no access modifier has 'default' (package-private) access, accessible only within the same package.",
      "answerCellList": [
        {
          "answerId": 93,
          "questionId": 24,
          "data": "A. It is public",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 94,
          "questionId": 24,
          "data": "B. It is private",
          "isItAnswer": false,
          "position": 2
        },
        {
          "answerId": 95,
          "questionId": 24,
          "data": "C. It is protected",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 96,
          "questionId": 24,
          "data": "D. It is default",
          "isItAnswer": true,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 24,
        "answerId": [96],
        "answer": ["D. It is default"],
        "explanation": "A class with no access modifier has 'default' (package-private) access, accessible only within the same package."
      }
    },
    {
      "questionId": 25,
      "question": "Can a 'private' constructor be used to create objects outside the class?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "A 'private' constructor cannot be used to create objects outside the class; it restricts instantiation to within the class.",
      "answerCellList": [
        {
          "answerId": 97,
          "questionId": 25,
          "data": "A. Yes",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 98,
          "questionId": 25,
          "data": "B. No",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 99,
          "questionId": 25,
          "data": "C. Only in subclasses",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 100,
          "questionId": 25,
          "data": "D. Only in the same package",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 25,
        "answerId": [98],
        "answer": ["B. No"],
        "explanation": "A 'private' constructor cannot be used to create objects outside the class; it restricts instantiation to within the class."
      }
    },
    {
      "questionId": 26,
      "question": "Which access modifier is used for a method intended to be accessed by all classes in the application?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "The 'public' access modifier allows a method to be accessed by all classes in the application.",
      "answerCellList": [
        {
          "answerId": 101,
          "questionId": 26,
          "data": "A. private",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 102,
          "questionId": 26,
          "data": "B. public",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 103,
          "questionId": 26,
          "data": "C. protected",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 104,
          "questionId": 26,
          "data": "D. default",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 26,
        "answerId": [102],
        "answer": ["B. public"],
        "explanation": "The 'public' access modifier allows a method to be accessed by all classes in the application."
      }
    },
    {
      "questionId": 27,
      "question": "Can a 'protected' field be accessed directly in a subclass in a different package?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "A 'protected' field can be accessed directly in a subclass, even in a different package.",
      "answerCellList": [
        {
          "answerId": 105,
          "questionId": 27,
          "data": "A. Yes",
          "isItAnswer": true,
          "position": 1
        },
        {
          "answerId": 106,
          "questionId": 27,
          "data": "B. No",
          "isItAnswer": false,
          "position": 2
        },
        {
          "answerId": 107,
          "questionId": 27,
          "data": "C. Only if public",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 108,
          "questionId": 27,
          "data": "D. Only if static",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 27,
        "answerId": [105],
        "answer": ["A. Yes"],
        "explanation": "A 'protected' field can be accessed directly in a subclass, even in a different package."
      }
    },
    {
      "questionId": 28,
      "question": "What is the access level of a 'default' method in a class located in a different package?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "A 'default' method is not accessible from a different package, as it is limited to the same package.",
      "answerCellList": [
        {
          "answerId": 109,
          "questionId": 28,
          "data": "A. Accessible",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 110,
          "questionId": 28,
          "data": "B. Not accessible",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 111,
          "questionId": 28,
          "data": "C. Accessible in subclasses",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 112,
          "questionId": 28,
          "data": "D. Accessible if imported",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 28,
        "answerId": [110],
        "answer": ["B. Not accessible"],
        "explanation": "A 'default' method is not accessible from a different package, as it is limited to the same package."
      }
    },
    {
      "questionId": 29,
      "question": "Which access modifier is best for a field that should only be modified within its class?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "The 'private' access modifier ensures a field can only be modified within its own class.",
      "answerCellList": [
        {
          "answerId": 113,
          "questionId": 29,
          "data": "A. public",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 114,
          "questionId": 29,
          "data": "B. private",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 115,
          "questionId": 29,
          "data": "C. protected",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 116,
          "questionId": 29,
          "data": "D. default",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 29,
        "answerId": [114],
        "answer": ["B. private"],
        "explanation": "The 'private' access modifier ensures a field can only be modified within its own class."
      }
    },
    {
      "questionId": 30,
      "question": "Can a 'public' method in an interface have a more restrictive access modifier when implemented?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "A 'public' method in an interface cannot be implemented with a more restrictive access modifier, as it must remain 'public'.",
      "answerCellList": [
        {
          "answerId": 117,
          "questionId": 30,
          "data": "A. Yes",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 118,
          "questionId": 30,
          "data": "B. No",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 119,
          "questionId": 30,
          "data": "C. Only if protected",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 120,
          "questionId": 30,
          "data": "D. Only if default",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 30,
        "answerId": [118],
        "answer": ["B. No"],
        "explanation": "A 'public' method in an interface cannot be implemented with a more restrictive access modifier, as it must remain 'public'."
      }
    }
  ]
}