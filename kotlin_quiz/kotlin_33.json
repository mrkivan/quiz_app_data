{
  "total": 30,
  "items": [
    {
      "questionId": 1,
      "question": "What is Jetpack Compose in Android development?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Jetpack Compose is Android's modern toolkit for building native UI using a declarative approach.",
      "answerCellList": [
        {
          "answerId": 1,
          "questionId": 1,
          "data": "A. A database library",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 2,
          "questionId": 1,
          "data": "B. A declarative UI toolkit",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 3,
          "questionId": 1,
          "data": "C. A networking library",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 4,
          "questionId": 1,
          "data": "D. A testing framework",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 1,
        "answerId": [
          2
        ],
        "answer": [
          "B. A declarative UI toolkit"
        ],
        "explanation": "Jetpack Compose is Android's modern toolkit for building native UI using a declarative approach."
      }
    },
    {
      "questionId": 2,
      "question": "What is a Composable in Jetpack Compose?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "A Composable is a Kotlin function annotated with @Composable that describes a part of the UI.",
      "answerCellList": [
        {
          "answerId": 5,
          "questionId": 2,
          "data": "A. A layout XML file",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 6,
          "questionId": 2,
          "data": "B. A function annotated with @Composable",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 7,
          "questionId": 2,
          "data": "C. A View class",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 8,
          "questionId": 2,
          "data": "D. A database entity",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 2,
        "answerId": [
          6
        ],
        "answer": [
          "B. A function annotated with @Composable"
        ],
        "explanation": "A Composable is a Kotlin function annotated with @Composable that describes a part of the UI."
      }
    },
    {
      "questionId": 3,
      "question": "Which annotation is required for a function to be a Composable?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "@Composable is required to mark a function as a Composable in Jetpack Compose.",
      "answerCellList": [
        {
          "answerId": 9,
          "questionId": 3,
          "data": "A. @UI",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 10,
          "questionId": 3,
          "data": "B. @Composable",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 11,
          "questionId": 3,
          "data": "C. @View",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 12,
          "questionId": 3,
          "data": "D. @Layout",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 3,
        "answerId": [
          10
        ],
        "answer": [
          "B. @Composable"
        ],
        "explanation": "@Composable is required to mark a function as a Composable in Jetpack Compose."
      }
    },
    {
      "questionId": 4,
      "question": "How do you create a basic Text composable in Jetpack Compose?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Use Text(\"Hello\") to create a basic Text composable in Jetpack Compose.",
      "answerCellList": [
        {
          "answerId": 13,
          "questionId": 4,
          "data": "A. TextView(\"Hello\")",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 14,
          "questionId": 4,
          "data": "B. Text(\"Hello\")",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 15,
          "questionId": 4,
          "data": "C. Label(\"Hello\")",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 16,
          "questionId": 4,
          "data": "D. TextField(\"Hello\")",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 4,
        "answerId": [
          14
        ],
        "answer": [
          "B. Text(\"Hello\")"
        ],
        "explanation": "Use Text(\"Hello\") to create a basic Text composable in Jetpack Compose."
      }
    },
    {
      "questionId": 5,
      "question": "Which composable is used to create a button in Jetpack Compose?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Button is used to create a clickable button in Jetpack Compose.",
      "answerCellList": [
        {
          "answerId": 17,
          "questionId": 5,
          "data": "A. Clickable",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 18,
          "questionId": 5,
          "data": "B. Button",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 19,
          "questionId": 5,
          "data": "C. ActionButton",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 20,
          "questionId": 5,
          "data": "D. Pressable",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 5,
        "answerId": [
          18
        ],
        "answer": [
          "B. Button"
        ],
        "explanation": "Button is used to create a clickable button in Jetpack Compose."
      }
    },
    {
      "questionId": 6,
      "question": "How do you handle state in Jetpack Compose?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Use remember { mutableStateOf(value) } to manage state in Jetpack Compose.",
      "answerCellList": [
        {
          "answerId": 21,
          "questionId": 6,
          "data": "A. Use LiveData",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 22,
          "questionId": 6,
          "data": "B. Use remember { mutableStateOf(value) }",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 23,
          "questionId": 6,
          "data": "C. Use StateFlow",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 24,
          "questionId": 6,
          "data": "D. Use ViewModel",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 6,
        "answerId": [
          22
        ],
        "answer": [
          "B. Use remember { mutableStateOf(value) }"
        ],
        "explanation": "Use remember { mutableStateOf(value) } to manage state in Jetpack Compose."
      }
    },
    {
      "questionId": 7,
      "question": "Which composable is used for vertical arrangement of UI elements?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Column is used to arrange UI elements vertically in Jetpack Compose.",
      "answerCellList": [
        {
          "answerId": 25,
          "questionId": 7,
          "data": "A. Row",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 26,
          "questionId": 7,
          "data": "B. Column",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 27,
          "questionId": 7,
          "data": "C. Box",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 28,
          "questionId": 7,
          "data": "D. Stack",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 7,
        "answerId": [
          26
        ],
        "answer": [
          "B. Column"
        ],
        "explanation": "Column is used to arrange UI elements vertically in Jetpack Compose."
      }
    },
    {
      "questionId": 8,
      "question": "Which composable is used for horizontal arrangement of UI elements?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Row is used to arrange UI elements horizontally in Jetpack Compose.",
      "answerCellList": [
        {
          "answerId": 29,
          "questionId": 8,
          "data": "A. Column",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 30,
          "questionId": 8,
          "data": "B. Row",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 31,
          "questionId": 8,
          "data": "C. Box",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 32,
          "questionId": 8,
          "data": "D. Flow",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 8,
        "answerId": [
          30
        ],
        "answer": [
          "B. Row"
        ],
        "explanation": "Row is used to arrange UI elements horizontally in Jetpack Compose."
      }
    },
    {
      "questionId": 9,
      "question": "Which composable allows stacking UI elements on top of each other?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Box is used to stack UI elements on top of each other in Jetpack Compose.",
      "answerCellList": [
        {
          "answerId": 33,
          "questionId": 9,
          "data": "A. Column",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 34,
          "questionId": 9,
          "data": "B. Box",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 35,
          "questionId": 9,
          "data": "C. Row",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 36,
          "questionId": 9,
          "data": "D. Stack",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 9,
        "answerId": [
          34
        ],
        "answer": [
          "B. Box"
        ],
        "explanation": "Box is used to stack UI elements on top of each other in Jetpack Compose."
      }
    },
    {
      "questionId": 10,
      "question": "How do you make a composable clickable in Jetpack Compose?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Use the clickable modifier to make a composable clickable in Jetpack Compose.",
      "answerCellList": [
        {
          "answerId": 37,
          "questionId": 10,
          "data": "A. onClick()",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 38,
          "questionId": 10,
          "data": "B. clickable { }",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 39,
          "questionId": 10,
          "data": "C. setOnClickListener()",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 40,
          "questionId": 10,
          "data": "D. clickHandler()",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 10,
        "answerId": [
          38
        ],
        "answer": [
          "B. clickable { }"
        ],
        "explanation": "Use the clickable modifier to make a composable clickable in Jetpack Compose."
      }
    },
    {
      "questionId": 11,
      "question": "Which function is used to set the content of an Activity in Jetpack Compose?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "setContent is used to define the composable content for an Activity.",
      "answerCellList": [
        {
          "answerId": 41,
          "questionId": 11,
          "data": "A. setView()",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 42,
          "questionId": 11,
          "data": "B. setContent { }",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 43,
          "questionId": 11,
          "data": "C. compose()",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 44,
          "questionId": 11,
          "data": "D. setComposable()",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 11,
        "answerId": [
          42
        ],
        "answer": [
          "B. setContent { }"
        ],
        "explanation": "setContent is used to define the composable content for an Activity."
      }
    },
    {
      "questionId": 12,
      "question": "How do you apply padding to a composable?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Use the padding modifier to add padding to a composable.",
      "answerCellList": [
        {
          "answerId": 45,
          "questionId": 12,
          "data": "A. margin()",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 46,
          "questionId": 12,
          "data": "B. padding()",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 47,
          "questionId": 12,
          "data": "C. space()",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 48,
          "questionId": 12,
          "data": "D. offset()",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 12,
        "answerId": [
          46
        ],
        "answer": [
          "B. padding()"
        ],
        "explanation": "Use the padding modifier to add padding to a composable."
      }
    },
    {
      "questionId": 13,
      "question": "Which composable is used to create a text input field?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "TextField is used to create a text input field in Jetpack Compose.",
      "answerCellList": [
        {
          "answerId": 49,
          "questionId": 13,
          "data": "A. EditText",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 50,
          "questionId": 13,
          "data": "B. TextField",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 51,
          "questionId": 13,
          "data": "C. InputField",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 52,
          "questionId": 13,
          "data": "D. TextInput",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 13,
        "answerId": [
          50
        ],
        "answer": [
          "B. TextField"
        ],
        "explanation": "TextField is used to create a text input field in Jetpack Compose."
      }
    },
    {
      "questionId": 14,
      "question": "How do you observe a ViewModel in Jetpack Compose?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Use viewModel() and collectAsState() to observe ViewModel state in Jetpack Compose.",
      "answerCellList": [
        {
          "answerId": 53,
          "questionId": 14,
          "data": "A. observe()",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 54,
          "questionId": 14,
          "data": "B. viewModel() and collectAsState()",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 55,
          "questionId": 14,
          "data": "C. getViewModel()",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 56,
          "questionId": 14,
          "data": "D. watchViewModel()",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 14,
        "answerId": [
          54
        ],
        "answer": [
          "B. viewModel() and collectAsState()"
        ],
        "explanation": "Use viewModel() and collectAsState() to observe ViewModel state in Jetpack Compose."
      }
    },
    {
      "questionId": 15,
      "question": "Which composable is used to display a scrollable list?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "LazyColumn is used to display a scrollable vertical list in Jetpack Compose.",
      "answerCellList": [
        {
          "answerId": 57,
          "questionId": 15,
          "data": "A. Column",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 58,
          "questionId": 15,
          "data": "B. LazyColumn",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 59,
          "questionId": 15,
          "data": "C. ScrollView",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 60,
          "questionId": 15,
          "data": "D. ListView",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 15,
        "answerId": [
          58
        ],
        "answer": [
          "B. LazyColumn"
        ],
        "explanation": "LazyColumn is used to display a scrollable vertical list in Jetpack Compose."
      }
    },
    {
      "questionId": 16,
      "question": "Which composable is used for a horizontally scrollable list?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "LazyRow is used to display a scrollable horizontal list in Jetpack Compose.",
      "answerCellList": [
        {
          "answerId": 61,
          "questionId": 16,
          "data": "A. Row",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 62,
          "questionId": 16,
          "data": "B. LazyRow",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 63,
          "questionId": 16,
          "data": "C. HorizontalScroll",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 64,
          "questionId": 16,
          "data": "D. ScrollRow",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 16,
        "answerId": [
          62
        ],
        "answer": [
          "B. LazyRow"
        ],
        "explanation": "LazyRow is used to display a scrollable horizontal list in Jetpack Compose."
      }
    },
    {
      "questionId": 17,
      "question": "How do you apply a theme in Jetpack Compose?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Use MaterialTheme to apply a theme to composables in Jetpack Compose.",
      "answerCellList": [
        {
          "answerId": 65,
          "questionId": 17,
          "data": "A. Theme()",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 66,
          "questionId": 17,
          "data": "B. MaterialTheme",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 67,
          "questionId": 17,
          "data": "C. AppTheme",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 68,
          "questionId": 17,
          "data": "D. StyleTheme",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 17,
        "answerId": [
          66
        ],
        "answer": [
          "B. MaterialTheme"
        ],
        "explanation": "Use MaterialTheme to apply a theme to composables in Jetpack Compose."
      }
    },
    {
      "questionId": 18,
      "question": "Which modifier is used to set the size of a composable?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Use the size modifier to set the width and height of a composable.",
      "answerCellList": [
        {
          "answerId": 69,
          "questionId": 18,
          "data": "A. dimension()",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 70,
          "questionId": 18,
          "data": "B. size()",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 71,
          "questionId": 18,
          "data": "C. scale()",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 72,
          "questionId": 18,
          "data": "D. resize()",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 18,
        "answerId": [
          70
        ],
        "answer": [
          "B. size()"
        ],
        "explanation": "Use the size modifier to set the width and height of a composable."
      }
    },
    {
      "questionId": 19,
      "question": "How do you display an image in Jetpack Compose?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Use the Image composable to display an image in Jetpack Compose.",
      "answerCellList": [
        {
          "answerId": 73,
          "questionId": 19,
          "data": "A. ImageView",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 74,
          "questionId": 19,
          "data": "B. Image",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 75,
          "questionId": 19,
          "data": "C. Picture",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 76,
          "questionId": 19,
          "data": "D. Img",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 19,
        "answerId": [
          74
        ],
        "answer": [
          "B. Image"
        ],
        "explanation": "Use the Image composable to display an image in Jetpack Compose."
      }
    },
    {
      "questionId": 20,
      "question": "Which composable is used to create a navigation bar?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "BottomNavigation is used to create a bottom navigation bar in Jetpack Compose.",
      "answerCellList": [
        {
          "answerId": 77,
          "questionId": 20,
          "data": "A. NavBar",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 78,
          "questionId": 20,
          "data": "B. BottomNavigation",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 79,
          "questionId": 20,
          "data": "C. NavigationView",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 80,
          "questionId": 20,
          "data": "D. BottomBar",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 20,
        "answerId": [
          78
        ],
        "answer": [
          "B. BottomNavigation"
        ],
        "explanation": "BottomNavigation is used to create a bottom navigation bar in Jetpack Compose."
      }
    },
    {
      "questionId": 21,
      "question": "How do you handle navigation in Jetpack Compose?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Use NavHost and NavController to handle navigation in Jetpack Compose.",
      "answerCellList": [
        {
          "answerId": 81,
          "questionId": 21,
          "data": "A. Navigator",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 82,
          "questionId": 21,
          "data": "B. NavHost and NavController",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 83,
          "questionId": 21,
          "data": "C. NavigationManager",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 84,
          "questionId": 21,
          "data": "D. RouteHandler",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 21,
        "answerId": [
          82
        ],
        "answer": [
          "B. NavHost and NavController"
        ],
        "explanation": "Use NavHost and NavController to handle navigation in Jetpack Compose."
      }
    },
    {
      "questionId": 22,
      "question": "Which modifier is used to align a composable within its parent?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Use the align modifier within a Box to align a composable.",
      "answerCellList": [
        {
          "answerId": 85,
          "questionId": 22,
          "data": "A. position()",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 86,
          "questionId": 22,
          "data": "B. align()",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 87,
          "questionId": 22,
          "data": "C. layout()",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 88,
          "questionId": 22,
          "data": "D. place()",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 22,
        "answerId": [
          86
        ],
        "answer": [
          "B. align()"
        ],
        "explanation": "Use the align modifier within a Box to align a composable."
      }
    },
    {
      "questionId": 23,
      "question": "How do you create a custom theme in Jetpack Compose?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Use MaterialTheme with custom colors, typography, and shapes to create a custom theme.",
      "answerCellList": [
        {
          "answerId": 89,
          "questionId": 23,
          "data": "A. CustomTheme()",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 90,
          "questionId": 23,
          "data": "B. MaterialTheme with custom colors, typography, shapes",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 91,
          "questionId": 23,
          "data": "C. ThemeBuilder()",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 92,
          "questionId": 23,
          "data": "D. StyleTheme()",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 23,
        "answerId": [
          90
        ],
        "answer": [
          "B. MaterialTheme with custom colors, typography, shapes"
        ],
        "explanation": "Use MaterialTheme with custom colors, typography, and shapes to create a custom theme."
      }
    },
    {
      "questionId": 24,
      "question": "Which composable is used to display a progress indicator?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "CircularProgressIndicator is used to display a circular progress indicator in Jetpack Compose.",
      "answerCellList": [
        {
          "answerId": 93,
          "questionId": 24,
          "data": "A. ProgressBar",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 94,
          "questionId": 24,
          "data": "B. CircularProgressIndicator",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 95,
          "questionId": 24,
          "data": "C. LoadingBar",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 96,
          "questionId": 24,
          "data": "D. Spinner",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 24,
        "answerId": [
          94
        ],
        "answer": [
          "B. CircularProgressIndicator"
        ],
        "explanation": "CircularProgressIndicator is used to display a circular progress indicator in Jetpack Compose."
      }
    },
    {
      "questionId": 25,
      "question": "How do you handle side effects in Jetpack Compose?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Use LaunchedEffect or SideEffect to handle side effects in Jetpack Compose.",
      "answerCellList": [
        {
          "answerId": 97,
          "questionId": 25,
          "data": "A. EffectHandler",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 98,
          "questionId": 25,
          "data": "B. LaunchedEffect or SideEffect",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 99,
          "questionId": 25,
          "data": "C. OnEffect",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 100,
          "questionId": 25,
          "data": "D. SideAction",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 25,
        "answerId": [
          98
        ],
        "answer": [
          "B. LaunchedEffect or SideEffect"
        ],
        "explanation": "Use LaunchedEffect or SideEffect to handle side effects in Jetpack Compose."
      }
    },
    {
      "questionId": 26,
      "question": "Which composable is used to create a top app bar?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "TopAppBar is used to create a top app bar in Jetpack Compose.",
      "answerCellList": [
        {
          "answerId": 101,
          "questionId": 26,
          "data": "A. AppBar",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 102,
          "questionId": 26,
          "data": "B. TopAppBar",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 103,
          "questionId": 26,
          "data": "C. Toolbar",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 104,
          "questionId": 26,
          "data": "D. HeaderBar",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 26,
        "answerId": [
          102
        ],
        "answer": [
          "B. TopAppBar"
        ],
        "explanation": "TopAppBar is used to create a top app bar in Jetpack Compose."
      }
    },
    {
      "questionId": 27,
      "question": "How do you make a composable fill the maximum available width?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Use fillMaxWidth() to make a composable fill the maximum available width.",
      "answerCellList": [
        {
          "answerId": 105,
          "questionId": 27,
          "data": "A. maxWidth()",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 106,
          "questionId": 27,
          "data": "B. fillMaxWidth()",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 107,
          "questionId": 27,
          "data": "C. width(100%)",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 108,
          "questionId": 27,
          "data": "D. expandWidth()",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 27,
        "answerId": [
          106
        ],
        "answer": [
          "B. fillMaxWidth()"
        ],
        "explanation": "Use fillMaxWidth() to make a composable fill the maximum available width."
      }
    },
    {
      "questionId": 28,
      "question": "Which composable is used to create a card layout?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Card is used to create a card layout with elevation and rounded corners in Jetpack Compose.",
      "answerCellList": [
        {
          "answerId": 109,
          "questionId": 28,
          "data": "A. Panel",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 110,
          "questionId": 28,
          "data": "B. Card",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 111,
          "questionId": 28,
          "data": "C. Container",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 112,
          "questionId": 28,
          "data": "D. BoxCard",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 28,
        "answerId": [
          110
        ],
        "answer": [
          "B. Card"
        ],
        "explanation": "Card is used to create a card layout with elevation and rounded corners in Jetpack Compose."
      }
    },
    {
      "questionId": 29,
      "question": "How do you animate a composable in Jetpack Compose?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Use AnimatedVisibility or animateFloatAsState for animations in Jetpack Compose.",
      "answerCellList": [
        {
          "answerId": 113,
          "questionId": 29,
          "data": "A. AnimateView",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 114,
          "questionId": 29,
          "data": "B. AnimatedVisibility or animateFloatAsState",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 115,
          "questionId": 29,
          "data": "C. Transition",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 116,
          "questionId": 29,
          "data": "D. AnimateComposable",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 29,
        "answerId": [
          114
        ],
        "answer": [
          "B. AnimatedVisibility or animateFloatAsState"
        ],
        "explanation": "Use AnimatedVisibility or animateFloatAsState for animations in Jetpack Compose."
      }
    },
    {
      "questionId": 30,
      "question": "Which composable is used to create a floating action button?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "FloatingActionButton is used to create a floating action button in Jetpack Compose.",
      "answerCellList": [
        {
          "answerId": 117,
          "questionId": 30,
          "data": "A. ActionButton",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 118,
          "questionId": 30,
          "data": "B. FloatingActionButton",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 119,
          "questionId": 30,
          "data": "C. FabButton",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 120,
          "questionId": 30,
          "data": "D. FloatButton",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 30,
        "answerId": [
          118
        ],
        "answer": [
          "B. FloatingActionButton"
        ],
        "explanation": "FloatingActionButton is used to create a floating action button in Jetpack Compose."
      }
    }
  ]
}