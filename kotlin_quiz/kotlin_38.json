{
  "total": 30,
  "items": [
    {
      "questionId": 1,
      "question": "What is the purpose of running tasks on a background thread in Android?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Background threads prevent blocking the UI thread, ensuring a responsive app.",
      "answerCellList": [
        {
          "answerId": 1,
          "questionId": 1,
          "data": "A. To increase app size",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 2,
          "questionId": 1,
          "data": "B. To prevent UI thread blocking",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 3,
          "questionId": 1,
          "data": "C. To reduce memory usage",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 4,
          "questionId": 1,
          "data": "D. To simplify code",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 1,
        "answerId": [
          2
        ],
        "answer": [
          "B. To prevent UI thread blocking"
        ],
        "explanation": "Background threads prevent blocking the UI thread, ensuring a responsive app."
      }
    },
    {
      "questionId": 2,
      "question": "Which Kotlin feature is commonly used for asynchronous programming in Android?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Coroutines simplify asynchronous programming with structured concurrency.",
      "answerCellList": [
        {
          "answerId": 5,
          "questionId": 2,
          "data": "A. AsyncTask",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 6,
          "questionId": 2,
          "data": "B. Coroutines",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 7,
          "questionId": 2,
          "data": "C. Thread",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 8,
          "questionId": 2,
          "data": "D. Handler",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 2,
        "answerId": [
          6
        ],
        "answer": [
          "B. Coroutines"
        ],
        "explanation": "Coroutines simplify asynchronous programming with structured concurrency."
      }
    },
    {
      "questionId": 3,
      "question": "What is the purpose of a Service in Android?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "A Service performs long-running operations in the background without a UI.",
      "answerCellList": [
        {
          "answerId": 9,
          "questionId": 3,
          "data": "A. To display UI components",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 10,
          "questionId": 3,
          "data": "B. To perform background tasks",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 11,
          "questionId": 3,
          "data": "C. To manage app navigation",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 12,
          "questionId": 3,
          "data": "D. To handle user input",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 3,
        "answerId": [
          10
        ],
        "answer": [
          "B. To perform background tasks"
        ],
        "explanation": "A Service performs long-running operations in the background without a UI."
      }
    },
    {
      "questionId": 4,
      "question": "Which method runs a coroutine in a background thread?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Dispatchers.IO is used for background tasks like I/O operations.",
      "answerCellList": [
        {
          "answerId": 13,
          "questionId": 4,
          "data": "A. Dispatchers.Main",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 14,
          "questionId": 4,
          "data": "B. Dispatchers.IO",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 15,
          "questionId": 4,
          "data": "C. Dispatchers.Default",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 16,
          "questionId": 4,
          "data": "D. Dispatchers.UI",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 4,
        "answerId": [
          14
        ],
        "answer": [
          "B. Dispatchers.IO"
        ],
        "explanation": "Dispatchers.IO is used for background tasks like I/O operations."
      }
    },
    {
      "questionId": 5,
      "question": "What is the purpose of WorkManager in Android?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "WorkManager schedules deferrable, asynchronous tasks with constraints.",
      "answerCellList": [
        {
          "answerId": 17,
          "questionId": 5,
          "data": "A. Manages UI updates",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 18,
          "questionId": 5,
          "data": "B. Schedules deferrable tasks",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 19,
          "questionId": 5,
          "data": "C. Handles user input",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 20,
          "questionId": 5,
          "data": "D. Manages app navigation",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 5,
        "answerId": [
          18
        ],
        "answer": [
          "B. Schedules deferrable tasks"
        ],
        "explanation": "WorkManager schedules deferrable, asynchronous tasks with constraints."
      }
    },
    {
      "questionId": 6,
      "question": "Which class is deprecated for background tasks in Android?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "AsyncTask is deprecated in favor of Coroutines or WorkManager.",
      "answerCellList": [
        {
          "answerId": 21,
          "questionId": 6,
          "data": "A. Coroutines",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 22,
          "questionId": 6,
          "data": "B. AsyncTask",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 23,
          "questionId": 6,
          "data": "C. WorkManager",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 24,
          "questionId": 6,
          "data": "D. Handler",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 6,
        "answerId": [
          22
        ],
        "answer": [
          "B. AsyncTask"
        ],
        "explanation": "AsyncTask is deprecated in favor of Coroutines or WorkManager."
      }
    },
    {
      "questionId": 7,
      "question": "How do you start a Service in Android?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Use startService() with an Intent to start a Service.",
      "answerCellList": [
        {
          "answerId": 25,
          "questionId": 7,
          "data": "A. launchService()",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 26,
          "questionId": 7,
          "data": "B. startService()",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 27,
          "questionId": 7,
          "data": "C. beginService()",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 28,
          "questionId": 7,
          "data": "D. runService()",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 7,
        "answerId": [
          26
        ],
        "answer": [
          "B. startService()"
        ],
        "explanation": "Use startService() with an Intent to start a Service."
      }
    },
    {
      "questionId": 8,
      "question": "What is the purpose of a Foreground Service?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "A Foreground Service performs noticeable tasks with a notification.",
      "answerCellList": [
        {
          "answerId": 29,
          "questionId": 8,
          "data": "A. Runs tasks without a notification",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 30,
          "questionId": 8,
          "data": "B. Performs noticeable tasks with a notification",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 31,
          "questionId": 8,
          "data": "C. Manages UI updates",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 32,
          "questionId": 8,
          "data": "D. Handles user input",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 8,
        "answerId": [
          30
        ],
        "answer": [
          "B. Performs noticeable tasks with a notification"
        ],
        "explanation": "A Foreground Service performs noticeable tasks with a notification."
      }
    },
    {
      "questionId": 9,
      "question": "Which coroutine scope is used for UI-related tasks?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Dispatchers.Main is used for UI-related tasks on the main thread.",
      "answerCellList": [
        {
          "answerId": 33,
          "questionId": 9,
          "data": "A. Dispatchers.IO",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 34,
          "questionId": 9,
          "data": "B. Dispatchers.Main",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 35,
          "questionId": 9,
          "data": "C. Dispatchers.Default",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 36,
          "questionId": 9,
          "data": "D. Dispatchers.Background",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 9,
        "answerId": [
          34
        ],
        "answer": [
          "B. Dispatchers.Main"
        ],
        "explanation": "Dispatchers.Main is used for UI-related tasks on the main thread."
      }
    },
    {
      "questionId": 10,
      "question": "How do you stop a Service in Android?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Use stopService() or stopSelf() to stop a Service.",
      "answerCellList": [
        {
          "answerId": 37,
          "questionId": 10,
          "data": "A. endService()",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 38,
          "questionId": 10,
          "data": "B. stopService()",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 39,
          "questionId": 10,
          "data": "C. terminateService()",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 40,
          "questionId": 10,
          "data": "D. cancelService()",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 10,
        "answerId": [
          38
        ],
        "answer": [
          "B. stopService()"
        ],
        "explanation": "Use stopService() or stopSelf() to stop a Service."
      }
    },
    {
      "questionId": 11,
      "question": "What is the purpose of IntentService?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "IntentService handles asynchronous intents sequentially in a background thread.",
      "answerCellList": [
        {
          "answerId": 41,
          "questionId": 11,
          "data": "A. Manages UI updates",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 42,
          "questionId": 11,
          "data": "B. Handles intents in a background thread",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 43,
          "questionId": 11,
          "data": "C. Runs foreground tasks",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 44,
          "questionId": 11,
          "data": "D. Schedules UI tasks",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 11,
        "answerId": [
          42
        ],
        "answer": [
          "B. Handles intents in a background thread"
        ],
        "explanation": "IntentService handles asynchronous intents sequentially in a background thread."
      }
    },
    {
      "questionId": 12,
      "question": "Which method is overridden in a Service to handle start commands?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "onStartCommand() handles start commands in a Service.",
      "answerCellList": [
        {
          "answerId": 45,
          "questionId": 12,
          "data": "A. onCreate()",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 46,
          "questionId": 12,
          "data": "B. onStartCommand()",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 47,
          "questionId": 12,
          "data": "C. onBind()",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 48,
          "questionId": 12,
          "data": "D. onHandleIntent()",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 12,
        "answerId": [
          46
        ],
        "answer": [
          "B. onStartCommand()"
        ],
        "explanation": "onStartCommand() handles start commands in a Service."
      }
    },
    {
      "questionId": 13,
      "question": "How do you launch a coroutine in an Activity?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Use lifecycleScope.launch to launch a coroutine tied to the Activity's lifecycle.",
      "answerCellList": [
        {
          "answerId": 49,
          "questionId": 13,
          "data": "A. activityScope.launch",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 50,
          "questionId": 13,
          "data": "B. lifecycleScope.launch",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 51,
          "questionId": 13,
          "data": "C. coroutineScope.launch",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 52,
          "questionId": 13,
          "data": "D. launchCoroutine",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 13,
        "answerId": [
          50
        ],
        "answer": [
          "B. lifecycleScope.launch"
        ],
        "explanation": "Use lifecycleScope.launch to launch a coroutine tied to the Activity's lifecycle."
      }
    },
    {
      "questionId": 14,
      "question": "What is the purpose of Handler in Android?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Handler schedules messages and runnables on a thread's message queue.",
      "answerCellList": [
        {
          "answerId": 53,
          "questionId": 14,
          "data": "A. Manages UI layouts",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 54,
          "questionId": 14,
          "data": "B. Schedules messages and runnables",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 55,
          "questionId": 14,
          "data": "C. Handles intents",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 56,
          "questionId": 14,
          "data": "D. Manages services",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 14,
        "answerId": [
          54
        ],
        "answer": [
          "B. Schedules messages and runnables"
        ],
        "explanation": "Handler schedules messages and runnables on a thread's message queue."
      }
    },
    {
      "questionId": 15,
      "question": "Which method starts a Foreground Service?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "startForeground() starts a Foreground Service with a notification.",
      "answerCellList": [
        {
          "answerId": 57,
          "questionId": 15,
          "data": "A. startService()",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 58,
          "questionId": 15,
          "data": "B. startForeground()",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 59,
          "questionId": 15,
          "data": "C. beginForeground()",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 60,
          "questionId": 15,
          "data": "D. runForeground()",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 15,
        "answerId": [
          58
        ],
        "answer": [
          "B. startForeground()"
        ],
        "explanation": "startForeground() starts a Foreground Service with a notification."
      }
    },
    {
      "questionId": 16,
      "question": "What is the purpose of Dispatchers.Default in Coroutines?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Dispatchers.Default is used for CPU-intensive tasks like computations.",
      "answerCellList": [
        {
          "answerId": 61,
          "questionId": 16,
          "data": "A. UI-related tasks",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 62,
          "questionId": 16,
          "data": "B. CPU-intensive tasks",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 63,
          "questionId": 16,
          "data": "C. I/O operations",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 64,
          "questionId": 16,
          "data": "D. Database queries",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 16,
        "answerId": [
          62
        ],
        "answer": [
          "B. CPU-intensive tasks"
        ],
        "explanation": "Dispatchers.Default is used for CPU-intensive tasks like computations."
      }
    },
    {
      "questionId": 17,
      "question": "Which method is used to bind to a Service?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "bindService() is used to bind to a Service for communication.",
      "answerCellList": [
        {
          "answerId": 65,
          "questionId": 17,
          "data": "A. startService()",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 66,
          "questionId": 17,
          "data": "B. bindService()",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 67,
          "questionId": 17,
          "data": "C. connectService()",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 68,
          "questionId": 17,
          "data": "D. attachService()",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 17,
        "answerId": [
          66
        ],
        "answer": [
          "B. bindService()"
        ],
        "explanation": "bindService() is used to bind to a Service for communication."
      }
    },
    {
      "questionId": 18,
      "question": "What happens if a long-running task runs on the main thread?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Running long tasks on the main thread causes UI freezes or ANR errors.",
      "answerCellList": [
        {
          "answerId": 69,
          "questionId": 18,
          "data": "A. App runs faster",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 70,
          "questionId": 18,
          "data": "B. UI freezes or ANR",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 71,
          "questionId": 18,
          "data": "C. Task runs in background",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 72,
          "questionId": 18,
          "data": "D. App crashes immediately",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 18,
        "answerId": [
          70
        ],
        "answer": [
          "B. UI freezes or ANR"
        ],
        "explanation": "Running long tasks on the main thread causes UI freezes or ANR errors."
      }
    },
    {
      "questionId": 19,
      "question": "Which WorkManager class defines a single task?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Worker defines a single task in WorkManager.",
      "answerCellList": [
        {
          "answerId": 73,
          "questionId": 19,
          "data": "A. WorkRequest",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 74,
          "questionId": 19,
          "data": "B. Worker",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 75,
          "questionId": 19,
          "data": "C. WorkManager",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 76,
          "questionId": 19,
          "data": "D. WorkTask",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 19,
        "answerId": [
          74
        ],
        "answer": [
          "B. Worker"
        ],
        "explanation": "Worker defines a single task in WorkManager."
      }
    },
    {
      "questionId": 20,
      "question": "How do you schedule a one-time task with WorkManager?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Use OneTimeWorkRequest to schedule a one-time task in WorkManager.",
      "answerCellList": [
        {
          "answerId": 77,
          "questionId": 20,
          "data": "A. PeriodicWorkRequest",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 78,
          "questionId": 20,
          "data": "B. OneTimeWorkRequest",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 79,
          "questionId": 20,
          "data": "C. SingleWorkRequest",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 80,
          "questionId": 20,
          "data": "D. TaskWorkRequest",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 20,
        "answerId": [
          78
        ],
        "answer": [
          "B. OneTimeWorkRequest"
        ],
        "explanation": "Use OneTimeWorkRequest to schedule a one-time task in WorkManager."
      }
    },
    {
      "questionId": 21,
      "question": "What is the purpose of onHandleIntent() in IntentService?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "onHandleIntent() processes each Intent in IntentService sequentially.",
      "answerCellList": [
        {
          "answerId": 81,
          "questionId": 21,
          "data": "A. Starts the service",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 82,
          "questionId": 21,
          "data": "B. Processes intents sequentially",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 83,
          "questionId": 21,
          "data": "C. Binds the service",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 84,
          "questionId": 21,
          "data": "D. Updates the UI",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 21,
        "answerId": [
          82
        ],
        "answer": [
          "B. Processes intents sequentially"
        ],
        "explanation": "onHandleIntent() processes each Intent in IntentService sequentially."
      }
    },
    {
      "questionId": 22,
      "question": "Which coroutine scope is used in a Service?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Use CoroutineScope(Dispatchers.IO) or a custom scope for background tasks in a Service.",
      "answerCellList": [
        {
          "answerId": 85,
          "questionId": 22,
          "data": "A. lifecycleScope",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 86,
          "questionId": 22,
          "data": "B. CoroutineScope(Dispatchers.IO)",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 87,
          "questionId": 22,
          "data": "C. viewModelScope",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 88,
          "questionId": 22,
          "data": "D. activityScope",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 22,
        "answerId": [
          86
        ],
        "answer": [
          "B. CoroutineScope(Dispatchers.IO)"
        ],
        "explanation": "Use CoroutineScope(Dispatchers.IO) or a custom scope for background tasks in a Service."
      }
    },
    {
      "questionId": 23,
      "question": "What is the purpose of Looper in Android?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Looper manages the message queue for a thread.",
      "answerCellList": [
        {
          "answerId": 89,
          "questionId": 23,
          "data": "A. Manages UI updates",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 90,
          "questionId": 23,
          "data": "B. Manages message queue for a thread",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 91,
          "questionId": 23,
          "data": "C. Handles intents",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 92,
          "questionId": 23,
          "data": "D. Schedules services",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 23,
        "answerId": [
          90
        ],
        "answer": [
          "B. Manages message queue for a thread"
        ],
        "explanation": "Looper manages the message queue for a thread."
      }
    },
    {
      "questionId": 24,
      "question": "How do you cancel a coroutine?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Use cancel() on the Job returned by launch or async.",
      "answerCellList": [
        {
          "answerId": 93,
          "questionId": 24,
          "data": "A. stopCoroutine()",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 94,
          "questionId": 24,
          "data": "B. cancel()",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 95,
          "questionId": 24,
          "data": "C. terminateCoroutine()",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 96,
          "questionId": 24,
          "data": "D. endCoroutine()",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 24,
        "answerId": [
          94
        ],
        "answer": [
          "B. cancel()"
        ],
        "explanation": "Use cancel() on the Job returned by launch or async."
      }
    },
    {
      "questionId": 25,
      "question": "Which WorkManager class schedules periodic tasks?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "PeriodicWorkRequest schedules tasks that repeat at intervals.",
      "answerCellList": [
        {
          "answerId": 97,
          "questionId": 25,
          "data": "A. OneTimeWorkRequest",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 98,
          "questionId": 25,
          "data": "B. PeriodicWorkRequest",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 99,
          "questionId": 25,
          "data": "C. RecurringWorkRequest",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 100,
          "questionId": 25,
          "data": "D. ScheduledWorkRequest",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 25,
        "answerId": [
          98
        ],
        "answer": [
          "B. PeriodicWorkRequest"
        ],
        "explanation": "PeriodicWorkRequest schedules tasks that repeat at intervals."
      }
    },
    {
      "questionId": 26,
      "question": "What is the purpose of onBind() in a Service?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "onBind() provides a client-service communication interface.",
      "answerCellList": [
        {
          "answerId": 101,
          "questionId": 26,
          "data": "A. Starts the service",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 102,
          "questionId": 26,
          "data": "B. Provides client-service communication",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 103,
          "questionId": 26,
          "data": "C. Handles intents",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 104,
          "questionId": 26,
          "data": "D. Updates the UI",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 26,
        "answerId": [
          102
        ],
        "answer": [
          "B. Provides client-service communication"
        ],
        "explanation": "onBind() provides a client-service communication interface."
      }
    },
    {
      "questionId": 27,
      "question": "How do you post a Runnable to the main thread?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Use Handler(Looper.getMainLooper()).post() to run code on the main thread.",
      "answerCellList": [
        {
          "answerId": 105,
          "questionId": 27,
          "data": "A. Thread.post()",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 106,
          "questionId": 27,
          "data": "B. Handler.post()",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 107,
          "questionId": 27,
          "data": "C. Looper.post()",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 108,
          "questionId": 27,
          "data": "D. Runnable.post()",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 27,
        "answerId": [
          106
        ],
        "answer": [
          "B. Handler.post()"
        ],
        "explanation": "Use Handler(Looper.getMainLooper()).post() to run code on the main thread."
      }
    },
    {
      "questionId": 28,
      "question": "Which permission is required for a Foreground Service in Android 14+?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "FOREGROUND_SERVICE permission is required for Foreground Services.",
      "answerCellList": [
        {
          "answerId": 109,
          "questionId": 28,
          "data": "A. BACKGROUND_SERVICE",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 110,
          "questionId": 28,
          "data": "B. FOREGROUND_SERVICE",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 111,
          "questionId": 28,
          "data": "C. SERVICE_PERMISSION",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 112,
          "questionId": 28,
          "data": "D. RUN_SERVICE",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 28,
        "answerId": [
          110
        ],
        "answer": [
          "B. FOREGROUND_SERVICE"
        ],
        "explanation": "FOREGROUND_SERVICE permission is required for Foreground Services."
      }
    },
    {
      "questionId": 29,
      "question": "What is the purpose of withContext() in Coroutines?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "withContext() switches the coroutine context, e.g., to a different dispatcher.",
      "answerCellList": [
        {
          "answerId": 113,
          "questionId": 29,
          "data": "A. Cancels the coroutine",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 114,
          "questionId": 29,
          "data": "B. Switches coroutine context",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 115,
          "questionId": 29,
          "data": "C. Starts a new coroutine",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 116,
          "questionId": 29,
          "data": "D. Updates the UI",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 29,
        "answerId": [
          114
        ],
        "answer": [
          "B. Switches coroutine context"
        ],
        "explanation": "withContext() switches the coroutine context, e.g., to a different dispatcher."
      }
    },
    {
      "questionId": 30,
      "question": "How do you enqueue a task with WorkManager?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Use WorkManager.getInstance().enqueue() to schedule a task.",
      "answerCellList": [
        {
          "answerId": 117,
          "questionId": 30,
          "data": "A. WorkManager.schedule()",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 118,
          "questionId": 30,
          "data": "B. WorkManager.enqueue()",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 119,
          "questionId": 30,
          "data": "C. WorkManager.run()",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 120,
          "questionId": 30,
          "data": "D. WorkManager.start()",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 30,
        "answerId": [
          118
        ],
        "answer": [
          "B. WorkManager.enqueue()"
        ],
        "explanation": "Use WorkManager.getInstance().enqueue() to schedule a task."
      }
    }
  ]
}