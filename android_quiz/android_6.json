{
  "total": 30,
  "items": [
    {
      "questionId": 1,
      "question": "Which composable is used to animate the visibility of UI elements in Jetpack Compose?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "AnimatedVisibility animates the appearance and disappearance of its content in Jetpack Compose.",
      "answerCellList": [
        {
          "answerId": 1,
          "questionId": 1,
          "data": "A. Crossfade",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 2,
          "questionId": 1,
          "data": "B. AnimatedVisibility",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 3,
          "questionId": 1,
          "data": "C. animateContentSize",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 4,
          "questionId": 1,
          "data": "D. Animatable",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 1,
        "answerId": [
          2
        ],
        "answer": [
          "B. AnimatedVisibility"
        ],
        "explanation": "AnimatedVisibility animates the appearance and disappearance of its content in Jetpack Compose."
      }
    },
    {
      "questionId": 2,
      "question": "Which API is used to animate size changes of a composable?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "animateContentSize automatically animates size changes of a composable, such as when content expands or shrinks.",
      "answerCellList": [
        {
          "answerId": 5,
          "questionId": 2,
          "data": "A. AnimatedVisibility",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 6,
          "questionId": 2,
          "data": "B. animateContentSize",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 7,
          "questionId": 2,
          "data": "C. Crossfade",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 8,
          "questionId": 2,
          "data": "D. animateFloatAsState",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 2,
        "answerId": [
          6
        ],
        "answer": [
          "B. animateContentSize"
        ],
        "explanation": "animateContentSize automatically animates size changes of a composable, such as when content expands or shrinks."
      }
    },
    {
      "questionId": 3,
      "question": "True or False: Jetpack Compose supports spring-based animations.",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Jetpack Compose supports spring animations through AnimationSpec, providing natural, physics-based motion.",
      "answerCellList": [
        {
          "answerId": 9,
          "questionId": 3,
          "data": "A. True",
          "isItAnswer": true,
          "position": 1
        },
        {
          "answerId": 10,
          "questionId": 3,
          "data": "B. False",
          "isItAnswer": false,
          "position": 2
        }
      ],
      "correctAnswer": {
        "questionId": 3,
        "answerId": [
          9
        ],
        "answer": [
          "A. True"
        ],
        "explanation": "Jetpack Compose supports spring animations through AnimationSpec, providing natural, physics-based motion."
      }
    },
    {
      "questionId": 4,
      "question": "Which of the following are animation APIs in Jetpack Compose? (Select all that apply)",
      "answerCellType": 1,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "AnimatedVisibility, animateContentSize, and Crossfade are animation APIs, while Modifier is for UI customization.",
      "answerCellList": [
        {
          "answerId": 11,
          "questionId": 4,
          "data": "A. AnimatedVisibility",
          "isItAnswer": true,
          "position": 1
        },
        {
          "answerId": 12,
          "questionId": 4,
          "data": "B. animateContentSize",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 13,
          "questionId": 4,
          "data": "C. Modifier",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 14,
          "questionId": 4,
          "data": "D. Crossfade",
          "isItAnswer": true,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 4,
        "answerId": [
          11,
          12,
          14
        ],
        "answer": [
          "A. AnimatedVisibility",
          "B. animateContentSize",
          "D. Crossfade"
        ],
        "explanation": "AnimatedVisibility, animateContentSize, and Crossfade are animation APIs, while Modifier is for UI customization."
      }
    },
    {
      "questionId": 5,
      "question": "Which API is used to animate a float value in Jetpack Compose?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "animateFloatAsState animates a float value, such as opacity or rotation, when the target value changes.",
      "answerCellList": [
        {
          "answerId": 15,
          "questionId": 5,
          "data": "A. animateContentSize",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 16,
          "questionId": 5,
          "data": "B. animateFloatAsState",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 17,
          "questionId": 5,
          "data": "C. AnimatedVisibility",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 18,
          "questionId": 5,
          "data": "D. Crossfade",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 5,
        "answerId": [
          16
        ],
        "answer": [
          "B. animateFloatAsState"
        ],
        "explanation": "animateFloatAsState animates a float value, such as opacity or rotation, when the target value changes."
      }
    },
    {
      "questionId": 6,
      "question": "True or False: Crossfade animates transitions between two composables.",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Crossfade animates the transition between two composables by fading one out and the other in.",
      "answerCellList": [
        {
          "answerId": 19,
          "questionId": 6,
          "data": "A. True",
          "isItAnswer": true,
          "position": 1
        },
        {
          "answerId": 20,
          "questionId": 6,
          "data": "B. False",
          "isItAnswer": false,
          "position": 2
        }
      ],
      "correctAnswer": {
        "questionId": 6,
        "answerId": [
          19
        ],
        "answer": [
          "A. True"
        ],
        "explanation": "Crossfade animates the transition between two composables by fading one out and the other in."
      }
    },
    {
      "questionId": 7,
      "question": "Which AnimationSpec provides a linear interpolation for animations?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "tween provides linear or easing-based interpolation for animations with a specified duration.",
      "answerCellList": [
        {
          "answerId": 21,
          "questionId": 7,
          "data": "A. spring",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 22,
          "questionId": 7,
          "data": "B. tween",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 23,
          "questionId": 7,
          "data": "C. keyframes",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 24,
          "questionId": 7,
          "data": "D. repeatable",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 7,
        "answerId": [
          22
        ],
        "answer": [
          "B. tween"
        ],
        "explanation": "tween provides linear or easing-based interpolation for animations with a specified duration."
      }
    },
    {
      "questionId": 8,
      "question": "Which of the following can be animated in Jetpack Compose? (Select all that apply)",
      "answerCellType": 1,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Opacity, size, and position can be animated, while Modifier.clickable is for interaction, not animation.",
      "answerCellList": [
        {
          "answerId": 25,
          "questionId": 8,
          "data": "A. Opacity",
          "isItAnswer": true,
          "position": 1
        },
        {
          "answerId": 26,
          "questionId": 8,
          "data": "B. Size",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 27,
          "questionId": 8,
          "data": "C. Modifier.clickable",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 28,
          "questionId": 8,
          "data": "D. Position",
          "isItAnswer": true,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 8,
        "answerId": [
          25,
          26,
          28
        ],
        "answer": [
          "A. Opacity",
          "B. Size",
          "D. Position"
        ],
        "explanation": "Opacity, size, and position can be animated, while Modifier.clickable is for interaction, not animation."
      }
    },
    {
      "questionId": 9,
      "question": "Which API is used for low-level animation control in Jetpack Compose?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Animatable provides fine-grained control for custom animations, allowing manual manipulation of values.",
      "answerCellList": [
        {
          "answerId": 29,
          "questionId": 9,
          "data": "A. animateContentSize",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 30,
          "questionId": 9,
          "data": "B. Animatable",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 31,
          "questionId": 9,
          "data": "C. AnimatedVisibility",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 32,
          "questionId": 9,
          "data": "D. Crossfade",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 9,
        "answerId": [
          30
        ],
        "answer": [
          "B. Animatable"
        ],
        "explanation": "Animatable provides fine-grained control for custom animations, allowing manual manipulation of values."
      }
    },
    {
      "questionId": 10,
      "question": "True or False: AnimatedVisibility supports custom enter and exit animations.",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "AnimatedVisibility allows customization of enter and exit animations, such as fade or slide effects.",
      "answerCellList": [
        {
          "answerId": 33,
          "questionId": 10,
          "data": "A. True",
          "isItAnswer": true,
          "position": 1
        },
        {
          "answerId": 34,
          "questionId": 10,
          "data": "B. False",
          "isItAnswer": false,
          "position": 2
        }
      ],
      "correctAnswer": {
        "questionId": 10,
        "answerId": [
          33
        ],
        "answer": [
          "A. True"
        ],
        "explanation": "AnimatedVisibility allows customization of enter and exit animations, such as fade or slide effects."
      }
    },
    {
      "questionId": 11,
      "question": "Which AnimationSpec creates physics-based animations?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "spring creates physics-based animations with properties like stiffness and damping.",
      "answerCellList": [
        {
          "answerId": 35,
          "questionId": 11,
          "data": "A. tween",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 36,
          "questionId": 11,
          "data": "B. spring",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 37,
          "questionId": 11,
          "data": "C. keyframes",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 38,
          "questionId": 11,
          "data": "D. repeatable",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 11,
        "answerId": [
          36
        ],
        "answer": [
          "B. spring"
        ],
        "explanation": "spring creates physics-based animations with properties like stiffness and damping."
      }
    },
    {
      "questionId": 12,
      "question": "Which properties can be customized in a tween AnimationSpec? (Select all that apply)",
      "answerCellType": 1,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "tween allows customization of duration, delay, and easing, but not stiffness, which is for spring animations.",
      "answerCellList": [
        {
          "answerId": 39,
          "questionId": 12,
          "data": "A. Duration",
          "isItAnswer": true,
          "position": 1
        },
        {
          "answerId": 40,
          "questionId": 12,
          "data": "B. Delay",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 41,
          "questionId": 12,
          "data": "C. Stiffness",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 42,
          "questionId": 12,
          "data": "D. Easing",
          "isItAnswer": true,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 12,
        "answerId": [
          39,
          40,
          42
        ],
        "answer": [
          "A. Duration",
          "B. Delay",
          "D. Easing"
        ],
        "explanation": "tween allows customization of duration, delay, and easing, but not stiffness, which is for spring animations."
      }
    },
    {
      "questionId": 13,
      "question": "Which composable animates transitions between different UI states?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Crossfade animates transitions between different UI states, such as switching between two composables.",
      "answerCellList": [
        {
          "answerId": 43,
          "questionId": 13,
          "data": "A. AnimatedVisibility",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 44,
          "questionId": 13,
          "data": "B. Crossfade",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 45,
          "questionId": 13,
          "data": "C. animateContentSize",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 46,
          "questionId": 13,
          "data": "D. Animatable",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 13,
        "answerId": [
          44
        ],
        "answer": [
          "B. Crossfade"
        ],
        "explanation": "Crossfade animates transitions between different UI states, such as switching between two composables."
      }
    },
    {
      "questionId": 14,
      "question": "True or False: Animatable supports animating multiple values simultaneously.",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Animatable is designed for single-value animations; multiple values require separate Animatable instances or other APIs.",
      "answerCellList": [
        {
          "answerId": 47,
          "questionId": 14,
          "data": "A. True",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 48,
          "questionId": 14,
          "data": "B. False",
          "isItAnswer": true,
          "position": 2
        }
      ],
      "correctAnswer": {
        "questionId": 14,
        "answerId": [
          48
        ],
        "answer": [
          "B. False"
        ],
        "explanation": "Animatable is designed for single-value animations; multiple values require separate Animatable instances or other APIs."
      }
    },
    {
      "questionId": 15,
      "question": "Which AnimationSpec allows defining specific animation values at timestamps?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "keyframes allows defining specific values at timestamps for precise control over animations.",
      "answerCellList": [
        {
          "answerId": 49,
          "questionId": 15,
          "data": "A. tween",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 50,
          "questionId": 15,
          "data": "B. keyframes",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 51,
          "questionId": 15,
          "data": "C. spring",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 52,
          "questionId": 15,
          "data": "D. repeatable",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 15,
        "answerId": [
          50
        ],
        "answer": [
          "B. keyframes"
        ],
        "explanation": "keyframes allows defining specific values at timestamps for precise control over animations."
      }
    },
    {
      "questionId": 16,
      "question": "Which of the following are valid AnimationSpec types in Jetpack Compose? (Select all that apply)",
      "answerCellType": 1,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "tween, spring, and keyframes are AnimationSpec types, while Modifier is not an animation specification.",
      "answerCellList": [
        {
          "answerId": 53,
          "questionId": 16,
          "data": "A. tween",
          "isItAnswer": true,
          "position": 1
        },
        {
          "answerId": 54,
          "questionId": 16,
          "data": "B. spring",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 55,
          "questionId": 16,
          "data": "C. Modifier",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 56,
          "questionId": 16,
          "data": "D. keyframes",
          "isItAnswer": true,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 16,
        "answerId": [
          53,
          54,
          56
        ],
        "answer": [
          "A. tween",
          "B. spring",
          "D. keyframes"
        ],
        "explanation": "tween, spring, and keyframes are AnimationSpec types, while Modifier is not an animation specification."
      }
    },
    {
      "questionId": 17,
      "question": "Which API animates a single value like scale or rotation?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "animateFloatAsState animates a single float value, ideal for properties like scale or rotation.",
      "answerCellList": [
        {
          "answerId": 57,
          "questionId": 17,
          "data": "A. animateContentSize",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 58,
          "questionId": 17,
          "data": "B. animateFloatAsState",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 59,
          "questionId": 17,
          "data": "C. AnimatedVisibility",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 60,
          "questionId": 17,
          "data": "D. Crossfade",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 17,
        "answerId": [
          58
        ],
        "answer": [
          "B. animateFloatAsState"
        ],
        "explanation": "animateFloatAsState animates a single float value, ideal for properties like scale or rotation."
      }
    },
    {
      "questionId": 18,
      "question": "True or False: Animations in Jetpack Compose are automatically recomposed when state changes.",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Animation APIs like animateFloatAsState automatically trigger recomposition when their target state changes.",
      "answerCellList": [
        {
          "answerId": 61,
          "questionId": 18,
          "data": "A. True",
          "isItAnswer": true,
          "position": 1
        },
        {
          "answerId": 62,
          "questionId": 18,
          "data": "B. False",
          "isItAnswer": false,
          "position": 2
        }
      ],
      "correctAnswer": {
        "questionId": 18,
        "answerId": [
          61
        ],
        "answer": [
          "A. True"
        ],
        "explanation": "Animation APIs like animateFloatAsState automatically trigger recomposition when their target state changes."
      }
    },
    {
      "questionId": 19,
      "question": "Which composable is used to animate transitions between multiple states?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "updateTransition manages animations between multiple states, coordinating transitions for multiple properties.",
      "answerCellList": [
        {
          "answerId": 63,
          "questionId": 19,
          "data": "A. Crossfade",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 64,
          "questionId": 19,
          "data": "B. updateTransition",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 65,
          "questionId": 19,
          "data": "C. animateContentSize",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 66,
          "questionId": 19,
          "data": "D. AnimatedVisibility",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 19,
        "answerId": [
          64
        ],
        "answer": [
          "B. updateTransition"
        ],
        "explanation": "updateTransition manages animations between multiple states, coordinating transitions for multiple properties."
      }
    },
    {
      "questionId": 20,
      "question": "Which of the following can be used with AnimatedVisibility? (Select all that apply)",
      "answerCellType": 1,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "AnimatedVisibility supports fade, slide, and expand animations, but not colorScheme, which is for theming.",
      "answerCellList": [
        {
          "answerId": 67,
          "questionId": 20,
          "data": "A. Fade animations",
          "isItAnswer": true,
          "position": 1
        },
        {
          "answerId": 68,
          "questionId": 20,
          "data": "B. Slide animations",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 69,
          "questionId": 20,
          "data": "C. colorScheme",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 70,
          "questionId": 20,
          "data": "D. Expand animations",
          "isItAnswer": true,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 20,
        "answerId": [
          67,
          68,
          70
        ],
        "answer": [
          "A. Fade animations",
          "B. Slide animations",
          "D. Expand animations"
        ],
        "explanation": "AnimatedVisibility supports fade, slide, and expand animations, but not colorScheme, which is for theming."
      }
    },
    {
      "questionId": 21,
      "question": "Which API is used for repeating animations in Jetpack Compose?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "repeatable creates animations that repeat a specified number of times or indefinitely.",
      "answerCellList": [
        {
          "answerId": 71,
          "questionId": 21,
          "data": "A. tween",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 72,
          "questionId": 21,
          "data": "B. repeatable",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 73,
          "questionId": 21,
          "data": "C. spring",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 74,
          "questionId": 21,
          "data": "D. keyframes",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 21,
        "answerId": [
          72
        ],
        "answer": [
          "B. repeatable"
        ],
        "explanation": "repeatable creates animations that repeat a specified number of times or indefinitely."
      }
    },
    {
      "questionId": 22,
      "question": "True or False: animateContentSize can animate width and height changes.",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "animateContentSize animates changes in both width and height of a composable’s content.",
      "answerCellList": [
        {
          "answerId": 75,
          "questionId": 22,
          "data": "A. True",
          "isItAnswer": true,
          "position": 1
        },
        {
          "answerId": 76,
          "questionId": 22,
          "data": "B. False",
          "isItAnswer": false,
          "position": 2
        }
      ],
      "correctAnswer": {
        "questionId": 22,
        "answerId": [
          75
        ],
        "answer": [
          "A. True"
        ],
        "explanation": "animateContentSize animates changes in both width and height of a composable’s content."
      }
    },
    {
      "questionId": 23,
      "question": "Which API coordinates multiple animations in Jetpack Compose?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "updateTransition coordinates multiple animations for different properties based on a target state.",
      "answerCellList": [
        {
          "answerId": 77,
          "questionId": 23,
          "data": "A. animateContentSize",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 78,
          "questionId": 23,
          "data": "B. updateTransition",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 79,
          "questionId": 23,
          "data": "C. AnimatedVisibility",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 80,
          "questionId": 23,
          "data": "D. Crossfade",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 23,
        "answerId": [
          78
        ],
        "answer": [
          "B. updateTransition"
        ],
        "explanation": "updateTransition coordinates multiple animations for different properties based on a target state."
      }
    },
    {
      "questionId": 24,
      "question": "Which properties can be customized in a spring AnimationSpec? (Select all that apply)",
      "answerCellType": 1,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "spring supports stiffness, damping, and visibility threshold, but not easing, which is for tween animations.",
      "answerCellList": [
        {
          "answerId": 81,
          "questionId": 24,
          "data": "A. Stiffness",
          "isItAnswer": true,
          "position": 1
        },
        {
          "answerId": 82,
          "questionId": 24,
          "data": "B. Damping",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 83,
          "questionId": 24,
          "data": "C. Easing",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 84,
          "questionId": 24,
          "data": "D. Visibility threshold",
          "isItAnswer": true,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 24,
        "answerId": [
          81,
          82,
          84
        ],
        "answer": [
          "A. Stiffness",
          "B. Damping",
          "D. Visibility threshold"
        ],
        "explanation": "spring supports stiffness, damping, and visibility threshold, but not easing, which is for tween animations."
      }
    },
    {
      "questionId": 25,
      "question": "Which API is used to animate color changes in Jetpack Compose?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "animateColorAsState animates transitions between color values in Jetpack Compose.",
      "answerCellList": [
        {
          "answerId": 85,
          "questionId": 25,
          "data": "A. animateFloatAsState",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 86,
          "questionId": 25,
          "data": "B. animateColorAsState",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 87,
          "questionId": 25,
          "data": "C. AnimatedVisibility",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 88,
          "questionId": 25,
          "data": "D. Crossfade",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 25,
        "answerId": [
          86
        ],
        "answer": [
          "B. animateColorAsState"
        ],
        "explanation": "animateColorAsState animates transitions between color values in Jetpack Compose."
      }
    },
    {
      "questionId": 26,
      "question": "True or False: Animations in Jetpack Compose can be combined with state changes.",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "Animations in Jetpack Compose, like animateFloatAsState, are driven by state changes to trigger smooth transitions.",
      "answerCellList": [
        {
          "answerId": 89,
          "questionId": 26,
          "data": "A. True",
          "isItAnswer": true,
          "position": 1
        },
        {
          "answerId": 90,
          "questionId": 26,
          "data": "B. False",
          "isItAnswer": false,
          "position": 2
        }
      ],
      "correctAnswer": {
        "questionId": 26,
        "answerId": [
          89
        ],
        "answer": [
          "A. True"
        ],
        "explanation": "Animations in Jetpack Compose, like animateFloatAsState, are driven by state changes to trigger smooth transitions."
      }
    },
    {
      "questionId": 27,
      "question": "Which AnimationSpec is used for repeating animations indefinitely?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "repeatable with infinite iterations allows animations to repeat indefinitely.",
      "answerCellList": [
        {
          "answerId": 91,
          "questionId": 27,
          "data": "A. tween",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 92,
          "questionId": 27,
          "data": "B. repeatable",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 93,
          "questionId": 27,
          "data": "C. spring",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 94,
          "questionId": 27,
          "data": "D. keyframes",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 27,
        "answerId": [
          92
        ],
        "answer": [
          "B. repeatable"
        ],
        "explanation": "repeatable with infinite iterations allows animations to repeat indefinitely."
      }
    },
    {
      "questionId": 28,
      "question": "Which of the following can be animated with animateFloatAsState? (Select all that apply)",
      "answerCellType": 1,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "animateFloatAsState can animate opacity, scale, and rotation, but not typography, which is for text styling.",
      "answerCellList": [
        {
          "answerId": 95,
          "questionId": 28,
          "data": "A. Opacity",
          "isItAnswer": true,
          "position": 1
        },
        {
          "answerId": 96,
          "questionId": 28,
          "data": "B. Scale",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 97,
          "questionId": 28,
          "data": "C. Typography",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 98,
          "questionId": 28,
          "data": "D. Rotation",
          "isItAnswer": true,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 28,
        "answerId": [
          95,
          96,
          98
        ],
        "answer": [
          "A. Opacity",
          "B. Scale",
          "D. Rotation"
        ],
        "explanation": "animateFloatAsState can animate opacity, scale, and rotation, but not typography, which is for text styling."
      }
    },
    {
      "questionId": 29,
      "question": "Which API is used to animate transitions for navigation in Jetpack Compose?",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "The Navigation component’s transitions use AnimatedVisibility or custom animations for screen transitions.",
      "answerCellList": [
        {
          "answerId": 99,
          "questionId": 29,
          "data": "A. animateContentSize",
          "isItAnswer": false,
          "position": 1
        },
        {
          "answerId": 100,
          "questionId": 29,
          "data": "B. AnimatedVisibility",
          "isItAnswer": true,
          "position": 2
        },
        {
          "answerId": 101,
          "questionId": 29,
          "data": "C. animateFloatAsState",
          "isItAnswer": false,
          "position": 3
        },
        {
          "answerId": 102,
          "questionId": 29,
          "data": "D. Crossfade",
          "isItAnswer": false,
          "position": 4
        }
      ],
      "correctAnswer": {
        "questionId": 29,
        "answerId": [
          100
        ],
        "answer": [
          "B. AnimatedVisibility"
        ],
        "explanation": "The Navigation component’s transitions use AnimatedVisibility or custom animations for screen transitions."
      }
    },
    {
      "questionId": 30,
      "question": "True or False: keyframes allows precise control over animation timing and values.",
      "answerCellType": 0,
      "selectedOptions": null,
      "answerSectionTitle": null,
      "explanation": "keyframes provides precise control by defining specific values at timestamps for complex animations.",
      "answerCellList": [
        {
          "answerId": 103,
          "questionId": 30,
          "data": "A. True",
          "isItAnswer": true,
          "position": 1
        },
        {
          "answerId": 104,
          "questionId": 30,
          "data": "B. False",
          "isItAnswer": false,
          "position": 2
        }
      ],
      "correctAnswer": {
        "questionId": 30,
        "answerId": [
          103
        ],
        "answer": [
          "A. True"
        ],
        "explanation": "keyframes provides precise control by defining specific values at timestamps for complex animations."
      }
    }
  ]
}